[require]
shader model >= 6.0

[uav 0]
format r32-uint
size(2d, 16, 1)

11 15 8 10 8 0 8 8 0 0 0 0 0 0 0 0

[uav 1]
format r32-float
size(2d, 16, 1)

0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

[compute shader]

RWTexture2D<float> u1 : register(u1);

    [numthreads(4, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    u1[uint2(id, 0)] = WaveGetLaneIndex();
}

[test]
dispatch 4 1 1
probe uav 1 (0, 0) f32(0)
probe uav 1 (1, 0) f32(1)
probe uav 1 (2, 0) f32(2)
probe uav 1 (3, 0) f32(3)

[compute shader]

RWTexture2D<uint> u0;
RWTexture2D<float> u1;

    [numthreads(8, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    bool b = u0[uint2(id, 0)] == 8;
    u1[uint2(id, 0)] = WaveActiveBallot(b).x;
}

[test]
dispatch 8 1 1
probe uav 1 (0, 0) f32(212)
probe uav 1 (1, 0) f32(212)
probe uav 1 (2, 0) f32(212)
probe uav 1 (3, 0) f32(212)
probe uav 1 (4, 0) f32(212)
probe uav 1 (5, 0) f32(212)
probe uav 1 (6, 0) f32(212)
probe uav 1 (7, 0) f32(212)

[compute shader]

RWTexture2D<uint> u0;
RWTexture2D<float> u1;

    [numthreads(4, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    uint i = u0[uint2(id, 0)] + u0[uint2(id + 1, 0)];
    u1[uint2(id, 0)] = WaveReadLaneFirst(i);
    u1[uint2(4 + id, 0)] = WaveReadLaneAt(i, 3);
}

[test]
dispatch 4 1 1
probe uav 1 (0, 0) f32(26)
probe uav 1 (1, 0) f32(26)
probe uav 1 (2, 0) f32(26)
probe uav 1 (3, 0) f32(26)
probe uav 1 (4, 0) f32(18)
probe uav 1 (5, 0) f32(18)
probe uav 1 (6, 0) f32(18)
probe uav 1 (7, 0) f32(18)

[compute shader]

RWTexture2D<uint> u0;
RWTexture2D<float> u1;

    [numthreads(8, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    bool b = u0[uint2(id, 0)] == 8;
    u1[uint2(id, 0)] = WaveActiveCountBits(b);
}

[test]
dispatch 8 1 1
probe uav 1 (0, 0) f32(4)
probe uav 1 (1, 0) f32(4)
probe uav 1 (2, 0) f32(4)
probe uav 1 (3, 0) f32(4)
probe uav 1 (4, 0) f32(4)
probe uav 1 (5, 0) f32(4)
probe uav 1 (6, 0) f32(4)
probe uav 1 (7, 0) f32(4)


[compute shader]

RWTexture2D<uint> u0;
RWTexture2D<float> u1;

    [numthreads(8, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    bool b = u0[uint2(id, 0)] == 8;
    u1[uint2(id, 0)] = WavePrefixCountBits(b);
}

[test]
dispatch 8 1 1
probe uav 1 (0, 0) f32(0)
probe uav 1 (1, 0) f32(0)
probe uav 1 (2, 0) f32(0)
probe uav 1 (3, 0) f32(1)
probe uav 1 (4, 0) f32(1)
probe uav 1 (5, 0) f32(2)
probe uav 1 (6, 0) f32(2)
probe uav 1 (7, 0) f32(3)

[compute shader]

RWTexture2D<uint> u0;
RWTexture2D<float> u1;

    [numthreads(4, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    u1[uint2(id, 0)] = WaveActiveSum(u0[uint2(id, 0)]);
}

[test]
dispatch 4 1 1
probe uav 1 (0, 0) f32(44)
probe uav 1 (1, 0) f32(44)
probe uav 1 (2, 0) f32(44)
probe uav 1 (3, 0) f32(44)

[compute shader]

RWTexture2D<uint> u0;
RWTexture2D<float> u1;

    [numthreads(4, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    uint i = u0[uint2(id, 0)];
    u1[uint2(id, 0)] = WaveActiveBitAnd(i);
}

[test]
dispatch 4 1 1
probe uav 1 (0, 0) f32(8)
probe uav 1 (1, 0) f32(8)
probe uav 1 (2, 0) f32(8)
probe uav 1 (3, 0) f32(8)

[compute shader]

RWTexture2D<uint> u0;
RWTexture2D<float> u1;

    [numthreads(4, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    uint i = u0[uint2(id, 0)];
    u1[uint2(id, 0)] = WaveActiveBitOr(i);
}

[test]
dispatch 4 1 1
probe uav 1 (0, 0) f32(15)
probe uav 1 (1, 0) f32(15)
probe uav 1 (2, 0) f32(15)
probe uav 1 (3, 0) f32(15)

[compute shader]

RWTexture2D<uint> u0;
RWTexture2D<float> u1;

    [numthreads(4, 1, 1)]
void main(uint id : SV_GroupIndex)
{
    uint i = u0[uint2(id, 0)];
    u1[uint2(id, 0)] = WaveActiveBitXor(i);
}

[test]
dispatch 4 1 1
probe uav 1 (0, 0) f32(6)
probe uav 1 (1, 0) f32(6)
probe uav 1 (2, 0) f32(6)
probe uav 1 (3, 0) f32(6)
