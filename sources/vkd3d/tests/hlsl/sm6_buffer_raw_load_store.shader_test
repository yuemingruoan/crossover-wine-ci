[require]
shader model >= 5.0

[uav 0]
format r32g32b32a32-float
size(buffer, 48)

0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

[pixel shader todo]
uniform int4 i;
RWByteAddressBuffer u;

float4 main() : sv_target
{
    u.Store(i.x, 0.5);
    u.Store<float3>(i.x + 4, float3(0.625, 0.75, 1.0));
    u.Store<double>(i.x + 16, 2.75);
    u.Store<double2>(i.x + 24, double2(4.25, -1.5));
    float3 f = u.Load<float3>(i.y + 4);
    f.x += u.Load<float>(i.y);
    double2 d = u.Load<double2>(i.y + 24);
    d.y += u.Load<double>(i.y + 16);
    return float4(f, d.x + d.y);
}

[test]
uniform 0 int4 0 0 0 0
todo(sm<6) draw quad
probe (0, 0) rgba (1.125, 0.75, 1.0, 5.5)
